df_list <- list(
pr_2012,
pr_2013,
pr_2014,
pr_2015,
pr_2016,
pr_2017,
pr_2018,
pr_2019,
pr_2021,
pr_2022
)
pr_12_to_22 <-
df_list %>% reduce(full_join)
pr_2011 %>%
glimpse()
pr_2011 %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D|103D")) %>%
group_by(Signal_Type, Signal_Description)
pr_2011 %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D|103D")) %>%
group_by(Signal_Type, Signal_Description) %>%
count(sort =T )
# 2011
pr_2011 %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D")) %>%
group_by(Signal_Description) %>%
count(sort = T)
View(pr_2011)
View(pr_2012)
View(pr_2011)
View(pr_2012)
# all other years
pr_12_to_22 %>%
mutate(year = floor_date(Occurred_Date_Time, unit = "year")) %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D")) %>%
group_by(Charge_Code, Charge_Description) %>%
count(sort = T)
# all other years
pr_12_to_22 %>%
mutate(year = floor_date(Occurred_Date_Time, unit = "year")) %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D")) %>%
group_by(Signal_Type, Charge_Code, Charge_Description) %>%
count(sort = T)
# all other years
pr_12_to_22 %>%
mutate(year = floor_date(Occurred_Date_Time, unit = "year")) %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D")) %>%
group_by(Charge_Code, Charge_Description) %>%
count(sort = T)
# all other years
pr_12_to_22 %>%
mutate(year = floor_date(Occurred_Date_Time, unit = "year")) %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D")) %>%
group_by(Charge_Code, Charge_Description) %>%
count(sort = T)
pr_12_to_22 %>%
mutate(year = floor_date(Occurred_Date_Time, unit = "year")) %>%
filter(str_detect(Charge_Description, "STRANGULATION") | str_detect(Charge_Code, "14 35.3(B)7|14 35.3(b)6|14 35.3(L)|14 34.9(B)5|14 35.3(L)")) %>%
group_by(year) %>%
count(sort = T)
library(tidyverse)
library(lubridate)
library(dplyr)
library(tidycensus)
library(tidygeocoder)
pr_12_to_22 %>%
mutate(year = floor_date(Occurred_Date_Time, unit = "year")) %>%
filter(str_detect(Charge_Description, "STRANGULATION") | str_detect(Charge_Code, "14 35.3(B)7|14 35.3(b)6|14 35.3(L)|14 34.9(B)5|14 35.3(L)")) %>%
group_by(year) %>%
count(sort = T)
# How many DV Calls during natural disasters
# "During" is defined as 2 days before + day of disaster + 7 days after
pr_12_to_22_dv_nd %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D|103D")) %>%
group_by(disaster_which) %>%
count(sort = T)
# How many DV Calls during natural disasters
# "During" is defined as 2 days before + day of disaster + 7 days after
pr_12_to_22_dv_nd %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D|103D")) %>%
group_by(disaster_which) %>%
count(sort = T)
pr_12_to_22_dv_nd %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D|103D")) %>%
group_by(Charge_Code, Charge_Description) %>%
count(sort = T) %>%
View()
pr_12_to_22_dv_nd %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D|103D")) %>%
group_by(Charge_Code, Charge_Description) %>%
count(sort = T)
# Aggregating: Comparing # of DV calls durin natural disasters to 10 day period before/after
pr_12_to_22_dv_nd %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D|103D")) %>%
group_by(disaster_y_n) %>%
count(sort = T)
# How many strangulation charges during natural disasters?
pr_12_to_22_dv_nd %>%
filter(str_detect(Charge_Description, "STRANGULATION") | str_detect(Charge_Code, "14 35.3(B)7|14 35.3(b)6|14 35.3(L)|14 34.9(B)5|14 35.3(L)")) %>%
group_by(disaster_which) %>%
count(sort = T)
# Aggregating: Comparing # of DV calls durin natural disasters to 10 day period before/after
pr_12_to_22_dv_nd %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D|103D")) %>%
group_by(disaster_y_n) %>%
count(sort = T)
# How many DV Calls during natural disasters
# "During" is defined as 2 days before + day of disaster + 7 days after
pr_12_to_22_dv_nd %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D|103D")) %>%
group_by(disaster_which) %>%
count(sort = T)
library(tidyverse)
library(lubridate)
library(dplyr)
library(tidycensus)
library(tidygeocoder)
pr_2011 %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D")) %>%
group_by(Signal_Type, Signal_Description) %>%
count(sort =T )
pr_2011 <- read_csv("data/raw/Electronic_Police_Report_2012.csv")
pr_2011 <- read_csv("data/raw/Electronic_Police_Report_2011.csv")
cfs_2011 <- read_csv("data/raw/Call_for_Service_2011.csv")
# Calls for service
cfs_2011 <- read_csv("data/raw/Call_for_Service_2011.csv")
cfs_2020 <- read_csv("data/raw/Call_for_Service_2020.csv")
cfs_2011 <- read_csv("data/raw/Calls_for_Service_2011.csv")
cfs_2012 <- read_csv("data/raw/Calls_for_Service_2012.csv")
cfs_2013 <- read_csv("data/raw/Calls_for_Service_2013.csv")
cfs_2014 <- read_csv("data/raw/Calls_for_Service_2014.csv")
cfs_2015 <- read_csv("data/raw/Calls_for_Service_2015.csv")
cfs_2016 <- read_csv("data/raw/Calls_for_Service_2016.csv")
cfs_2017 <- read_csv("data/raw/Calls_for_Service_2017.csv")
cfs_2018 <- read_csv("data/raw/Calls_for_Service_2018.csv")
cfs_2019 <- read_csv("data/raw/Calls_for_Service_2019.csv")
cfs_2020 <- read_csv("data/raw/Calls_for_Service_2020.csv")
cfs_2021 <- read_csv("data/raw/Calls_for_Service_2021.csv")
View(cfs_2012)
View(cfs_2014)
View(pr_2015)
cfs_2013 %>%
glimpse()
cfs_2015 %>%
glimpse()
cfs_2015 %>%
glimpse()
pr_12_to_22 <-
df_list %>% reduce(select(Type_, TypeText, TimeCreate))
cfs_2015$Type_
View(cfs_2021)
?reduce()
View(cfs_2015)
View(cfs_2016)
View(cfs_2017)
View(cfs_2018)
View(cfs_2019)
View(cfs_2020)
View(cfs_2021)
cfs_2019$Type <- cfs_2019$Type_
cfs_2019 %>%
rename(Type_ = Type)
View(cfs_2021)
cfs_2019 %>%
rename(Type_ = Type)
cfs_2011 <- read_csv("data/raw/Calls_for_Service_2011.csv")
cfs_2012 <- read_csv("data/raw/Calls_for_Service_2012.csv")
cfs_2013 <- read_csv("data/raw/Calls_for_Service_2013.csv")
cfs_2014 <- read_csv("data/raw/Calls_for_Service_2014.csv")
cfs_2015 <- read_csv("data/raw/Calls_for_Service_2015.csv")
cfs_2016 <- read_csv("data/raw/Calls_for_Service_2016.csv")
cfs_2017 <- read_csv("data/raw/Calls_for_Service_2017.csv")
cfs_2018 <- read_csv("data/raw/Calls_for_Service_2018.csv")
cfs_2019 <- read_csv("data/raw/Calls_for_Service_2019.csv")
cfs_2020 <- read_csv("data/raw/Calls_for_Service_2020.csv")
cfs_2021 <- read_csv("data/raw/Calls_for_Service_2021.csv")
View(cfs_2017)
View(cfs_2019)
View(cfs_2020)
cfs_2019 %>%
rename(Type_ = Type)
cfs_2019 %>%
rename(Type_ = Type)
cfs_2020 %>%
rename(Type_ = Type)
cfs_2021 %>%
rename(Type_ = Type)
cfs_2019 <- cfs_2019 %>%
rename(Type_ = Type)
cfs_2020 <- cfs_2020 %>%
rename(Type_ = Type)
cfs_2021 <- cfs_2021 %>%
rename(Type_ = Type)
pr_12_to_22 <-
df_list %>% reduce(select(Type_, TypeText, TimeCreate))
pr_12_to_22 <-
df_list %>% reduce(select(TimeCreate))
df_list
lapply(df_list, select(Type_, TypeText, TimeCreate))
length(df_list)
for in 1:length(df_list) {
for i in 1:length(df_list) {
function(i) {
i %>%
select(Type_, TypeText, TimeCreate)
}
select_cfs <- function(i) {
i %>%
select(Type_, TypeText, TimeCreate)
}
lapply(df_list, select_cfs(Type_, TypeText, TimeCreate))
lapply(df_list, select_cfs())
lapply(df_list, select_cfs(df_list))
select_cfs(df_list)
lapply(df_list, function(x) subset(x, select = intersect(keep, colnames(x))))
cfs_2019 <- cfs_2019 %>%
rename(Type_ = Type)
View(pr_2021)
View(cfs_2021)
lapply(df_list, function(x) subset(x, select = intersect(c("Type", "TypeText", "TimeCreate"), colnames(x))))
df_list[1]
for (i in 1:length(df_list)){
i[i] %>%
select(Type_, TypeText, TimeCreate)
}
for (i in 1:length(df_list)){
df_list[i] %>%
select(Type_, TypeText, TimeCreate)
}
df_list[i]
df_list[1]
df_list[1] %>%
select(Type_, TypeText, TimeCreate)
df_list[1]
df_list[[1]]
for (i in 1:length(df_list)){
df_list[[i]] %>%
select(Type_, TypeText, TimeCreate)
}
for (i in 1:length(df_list)){
df_list[[i]] %>%
select(TypeText, TimeCreate)
}
df_list[[1]] %>%
select(Type_, TypeText, TimeCreate)
df_list <- list(
cfs_2012,
cfs_2013,
cfs_2014,
cfs_2015,
cfs_2016,
cfs_2017,
cfs_2018,
cfs_2019,
cfs_2021,
cfs_2022
)
df_list <- list(
cfs_2011,
cfs_2012,
cfs_2013,
cfs_2014,
cfs_2015,
cfs_2016,
cfs_2017,
cfs_2018,
cfs_2019,
cfs_2021
)
df_list[[1]]$Type
df_list[[1]]$Type_
# 2011
pr_2011 %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D")) %>%
group_by(Signal_Description) %>%
count(sort = T)
for (i in 1:length(df_list)){
df_list[[i]] %>%
select(Type_, TypeText, TimeCreate)
}
for (i in 1:length(df_list)){
df_list[[i]] %>%
select(Type_, TypeText, TimeCreate)
}
View(cfs_2021)
# Calls for service
cfs_2011 <- read_csv("data/raw/Calls_for_Service_2011.csv") %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2012 <- read_csv("data/raw/Calls_for_Service_2012.csv") %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2013 <- read_csv("data/raw/Calls_for_Service_2013.csv") %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2014 <- read_csv("data/raw/Calls_for_Service_2014.csv") %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2015 <- read_csv("data/raw/Calls_for_Service_2015.csv") %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2016 <- read_csv("data/raw/Calls_for_Service_2016.csv") %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2017 <- read_csv("data/raw/Calls_for_Service_2017.csv") %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2018 <- read_csv("data/raw/Calls_for_Service_2018.csv") %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2019 <- read_csv("data/raw/Calls_for_Service_2019.csv") %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2019 <- read_csv("data/raw/Calls_for_Service_2019.csv") %>%
rename(Type_ = Type) %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2020 <- read_csv("data/raw/Calls_for_Service_2020.csv") %>%
rename(Type_ = Type) %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
cfs_2021 <- read_csv("data/raw/Calls_for_Service_2021.csv")%>%
rename(Type_ = Type) %>%
select(Type_, TypeText, TimeCreate, TimeDispatch, TimeClosed, DispositionText, BLOCK_ADDRESS, Location)
df_list <- list(
cfs_2011,
cfs_2012,
cfs_2013,
cfs_2014,
cfs_2015,
cfs_2016,
cfs_2017,
cfs_2018,
cfs_2019,
cfs_2021
)
df_list <- list(
cfs_2011,
cfs_2012,
cfs_2013,
cfs_2014,
cfs_2015,
cfs_2016,
cfs_2017,
cfs_2018,
cfs_2019,
cfs_2021
)
cfs_11_to_21 <- df_list %>%
reduce(full_join)
View(cfs_11_to_21)
cfs_11_to_21 %>%
mutate(year = floor_date(TimeCreate, unit = "year")) %>%
filter(str_detect(Type_, "34D|35D|56D|38D|37D")) %>%
group_by(TypeText) %>%
count(sort = T)
cfs_11_to_21 %>%
mutate(year = floor_date(TimeCreate, unit = "year")) %>%
filter(str_detect(Type_, "34D|35D|56D|38D|37D")) %>%
group_by(TypeText) %>%
count(sort = T)
cfs_11_to_21 %>%
mutate(year = as_datetime(TimeCreate)) %>%
mutate(year = floor_date(TimeCreate, unit = "year")) %>%
filter(str_detect(Type_, "34D|35D|56D|38D|37D")) %>%
group_by(TypeText) %>%
count(sort = T)
dfs_11_to_21 %>%
glimpse()
cfs_11_to_21 %>%
glimpse()
cfs_11_to_21 %>%
mutate(year = as_datetime(TimeCreate)) %>%
glimpse()
cfs_by_week %>% stl(week, s.window='periodic') %>% seasadj()
library(tidyverse)
library(lubridate)
library(dplyr)
library(tidycensus)
library(tidygeocoder)
library(zoo)
lm(n ~ disaster_y_n, cfs_by_week)
cfs_by_week <- cfs_11_to_21_dv_nd %>%
filter(str_detect(Type_, "34D|35D|56D|38D|37D|103D")) %>%
mutate(TimeCreate = mdy_hms(TimeCreate)) %>%
group_by(week = floor_date(TimeCreate, unit = "week")) %>%
summarize(n = n()) %>%
ungroup() %>%
mutate(ma2=rollapply(n,2,mean,align='right',fill=NA)) %>%
mutate(disaster_which = case_when(
week >= "2012-08-24" & week < "2012-09-02" ~ "HURRICANE ISAAC",
week >= "2016-03-06" & week < "2016-03-14" ~ "SEVERE STORMS AND FLOODING MAR 2016",
week >= "2016-08-09" & week < "2016-08-18" ~ "SEVERE STORMS AND FLOODING AUG 2016",
week >= "2020-08-20" & week < "2020-08-29" ~ "HURRICANE LAURA",
week >= "2021-08-24" & week < "2021-09-02" ~ "HURRICANE IDA",
#
TRUE ~ "NO NATURAL DISASTER"
),
disaster_y_n = case_when(
week >= "2012-08-12" & week < "2012-08-22" ~ "TEN DAYS BEFORE",
week >= "2016-02-22" & week < "2016-03-04" ~ "TEN DAYS BEFORE",
week >= "2016-07-28" & week < "2016-08-07" ~ "TEN DAYS BEFORE",
week >= "2020-08-08" & week < "2020-08-18" ~ "TEN DAYS BEFORE",
week >= "2021-08-12" & week < "2021-08-22" ~ "TEN DAYS BEFORE",
#
week >= "2012-09-02" & week < "2012-09-12" ~ "TEN DAYS AFTER",
week >= "2016-03-14" & week < "2016-03-24" ~ "TEN DAYS AFTER",
week >= "2016-08-18" & week < "2016-08-28" ~ "TEN DAYS AFTER",
week >= "2020-08-29" & week < "2020-09-08" ~ "TEN DAYS AFTER",
week >= "2021-09-02" & week < "2021-09-12" ~ "TEN DAYS AFTER",
#
disaster_which == "NO NATURAL DISASTER" ~ "n",
#
TRUE ~ "y")) %>%
mutate(disaster_1_0 =
case_when(
disaster_y_n == "y" ~ 1,
disaster_y_n != "y" ~ 0
))
cfs_11_to_21 <- df_list %>%
reduce(full_join)
# for service calls
cfs_11_to_21_dv_nd <-
cfs_11_to_21 %>%
mutate(TimeDispatch = mdy_hms(TimeDispatch)) %>%
mutate(disaster_which = case_when(
TimeDispatch >= "2012-08-24" & TimeDispatch < "2012-09-02" ~ "HURRICANE ISAAC",
TimeDispatch >= "2016-03-06" & TimeDispatch < "2016-03-14" ~ "SEVERE STORMS AND FLOODING MAR 2016",
TimeDispatch >= "2016-08-09" & TimeDispatch < "2016-08-18" ~ "SEVERE STORMS AND FLOODING AUG 2016",
TimeDispatch >= "2020-08-20" & TimeDispatch < "2020-08-29" ~ "HURRICANE LAURA",
TimeDispatch >= "2021-08-24" & TimeDispatch < "2021-09-02" ~ "HURRICANE IDA",
#
TRUE ~ "NO NATURAL DISASTER"
),
disaster_y_n = case_when(
TimeDispatch >= "2012-08-12" & TimeDispatch < "2012-08-22" ~ "TEN DAYS BEFORE",
TimeDispatch >= "2016-02-22" & TimeDispatch < "2016-03-04" ~ "TEN DAYS BEFORE",
TimeDispatch >= "2016-07-28" & TimeDispatch < "2016-08-07" ~ "TEN DAYS BEFORE",
TimeDispatch >= "2020-08-08" & TimeDispatch < "2020-08-18" ~ "TEN DAYS BEFORE",
TimeDispatch >= "2021-08-12" & TimeDispatch < "2021-08-22" ~ "TEN DAYS BEFORE",
#
TimeDispatch >= "2012-09-02" & TimeDispatch < "2012-09-12" ~ "TEN DAYS AFTER",
TimeDispatch >= "2016-03-14" & TimeDispatch < "2016-03-24" ~ "TEN DAYS AFTER",
TimeDispatch >= "2016-08-18" & TimeDispatch < "2016-08-28" ~ "TEN DAYS AFTER",
TimeDispatch >= "2020-08-29" & TimeDispatch < "2020-09-08" ~ "TEN DAYS AFTER",
TimeDispatch >= "2021-09-02" & TimeDispatch < "2021-09-12" ~ "TEN DAYS AFTER",
#
disaster_which == "NO NATURAL DISASTER" ~ "n",
#
TRUE ~ "y")) %>%
mutate(disaster_1_0 =
case_when(
disaster_y_n == "y" ~ 1,
disaster_y_n != "y" ~ 0
))
# police filings
# "During" is defined as 2 days before + day of disaster + 7 days after
pr_12_to_22_dv_nd %>%
filter(str_detect(Signal_Type, "34D|35D|56D|38D|37D|103D")) %>%
group_by(disaster_which) %>%
count(sort = T)
# calls for service
cfs_11_to_21_dv_nd %>%
filter(str_detect(Type_, "34D|35D|56D|38D|37D|103D")) %>%
group_by(disaster_which) %>%
count(sort = T)
cfs_by_week <- cfs_11_to_21_dv_nd %>%
filter(str_detect(Type_, "34D|35D|56D|38D|37D|103D")) %>%
mutate(TimeCreate = mdy_hms(TimeCreate)) %>%
group_by(week = floor_date(TimeCreate, unit = "week")) %>%
summarize(n = n()) %>%
ungroup() %>%
mutate(ma2=rollapply(n,2,mean,align='right',fill=NA)) %>%
mutate(disaster_which = case_when(
week >= "2012-08-24" & week < "2012-09-02" ~ "HURRICANE ISAAC",
week >= "2016-03-06" & week < "2016-03-14" ~ "SEVERE STORMS AND FLOODING MAR 2016",
week >= "2016-08-09" & week < "2016-08-18" ~ "SEVERE STORMS AND FLOODING AUG 2016",
week >= "2020-08-20" & week < "2020-08-29" ~ "HURRICANE LAURA",
week >= "2021-08-24" & week < "2021-09-02" ~ "HURRICANE IDA",
#
TRUE ~ "NO NATURAL DISASTER"
),
disaster_y_n = case_when(
week >= "2012-08-12" & week < "2012-08-22" ~ "TEN DAYS BEFORE",
week >= "2016-02-22" & week < "2016-03-04" ~ "TEN DAYS BEFORE",
week >= "2016-07-28" & week < "2016-08-07" ~ "TEN DAYS BEFORE",
week >= "2020-08-08" & week < "2020-08-18" ~ "TEN DAYS BEFORE",
week >= "2021-08-12" & week < "2021-08-22" ~ "TEN DAYS BEFORE",
#
week >= "2012-09-02" & week < "2012-09-12" ~ "TEN DAYS AFTER",
week >= "2016-03-14" & week < "2016-03-24" ~ "TEN DAYS AFTER",
week >= "2016-08-18" & week < "2016-08-28" ~ "TEN DAYS AFTER",
week >= "2020-08-29" & week < "2020-09-08" ~ "TEN DAYS AFTER",
week >= "2021-09-02" & week < "2021-09-12" ~ "TEN DAYS AFTER",
#
disaster_which == "NO NATURAL DISASTER" ~ "n",
#
TRUE ~ "y")) %>%
mutate(disaster_1_0 =
case_when(
disaster_y_n == "y" ~ 1,
disaster_y_n != "y" ~ 0
))
cfs_by_week
lm(n ~ disaster_y_n, cfs_by_week)
cfs_by_week %>% stl(week, s.window='periodic') %>% seasadj()
# rolling average dv charges
pr_12_to_22_dv_nd %>%
filter(Charge_Description %in% dv_charges$Charge_Description) %>%
group_by(week = floor_date(Occurred_Date_Time, unit = "week")) %>%
summarize(n = n()) %>%
ungroup() %>%
mutate(ma2=rollapply(n,2,mean,align='right',fill=NA)) %>%
mutate(disaster_which = case_when(
week >= "2012-08-24" & week < "2012-09-02" ~ "HURRICANE ISAAC",
week >= "2016-03-06" & week < "2016-03-14" ~ "SEVERE STORMS AND FLOODING MAR 2016",
week >= "2016-08-09" & week < "2016-08-18" ~ "SEVERE STORMS AND FLOODING AUG 2016",
week >= "2020-08-20" & week < "2020-08-29" ~ "HURRICANE LAURA",
week >= "2021-08-24" & week < "2021-09-02" ~ "HURRICANE IDA",
#
TRUE ~ "NO NATURAL DISASTER"
))
